{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\social-space\\\\frontend\\\\src\\\\component\\\\Channel\\\\ChannelOpenMessage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { open } from '../../features/redux/openMessageSlice';\nimport { setMessageChat } from '../../features/redux/idMessageSlice';\nimport convertDate from '../../features/convertDate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChannelOpenMessage(props) {\n  _s();\n  const openChat = useSelector(state => state.openChat.value);\n  const idChat = useSelector(state => state.idChat.value);\n  const dispatch = useDispatch();\n  let Message = [];\n  if (props.data != null) {\n    props.data.sort(function (a, b) {\n      if (a.date < b.date) {\n        return 1;\n      }\n      if (a.date > b.date) {\n        return -1;\n      }\n      return 0;\n    }).forEach(element => {\n      if (element.type === \"channel\" && element.nameFrom === idChat || element.type === \"superchannel\" && element.nameFrom === idChat) {\n        if (element.text !== null) {\n          let data = [element.text, convertDate(element.date), element.chatId, element.messageId, element.username, element.answers, element.comments];\n          Message.push(data);\n        }\n      }\n    });\n  }\n  if (openChat === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Message.filter((element, index) => {\n        return Message.indexOf(element) === index;\n      }).map(data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ChatElement\",\n          onClick: () => {\n            dispatch(open());\n            dispatch(setMessageChat(data[3]));\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F: \", data[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0412\\u0440\\u0435\\u043C\\u044F: \", data[1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n}\n_s(ChannelOpenMessage, \"Lsz7ARPB4QsepvW16gY/PlSINp0=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = ChannelOpenMessage;\nvar _c;\n$RefreshReg$(_c, \"ChannelOpenMessage\");","map":{"version":3,"names":["React","useSelector","useDispatch","open","setMessageChat","convertDate","jsxDEV","_jsxDEV","ChannelOpenMessage","props","_s","openChat","state","value","idChat","dispatch","Message","data","sort","a","b","date","forEach","element","type","nameFrom","text","chatId","messageId","username","answers","comments","push","children","filter","index","indexOf","map","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Проекты/social-space/frontend/src/component/Channel/ChannelOpenMessage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { open } from '../../features/redux/openMessageSlice';\r\nimport { setMessageChat } from '../../features/redux/idMessageSlice';\r\nimport convertDate from '../../features/convertDate';\r\n\r\nexport default function ChannelOpenMessage(props) {\r\n    const openChat = useSelector((state) => state.openChat.value)\r\n    const idChat = useSelector((state) => state.idChat.value)\r\n    const dispatch = useDispatch()\r\n  \r\n    let Message = [];\r\n\r\n    if(props.data != null){\r\n        props.data.sort(function(a,b){\r\n            if(a.date < b.date){\r\n                return 1;\r\n            }\r\n            if(a.date > b.date){\r\n                return -1;\r\n            }\r\n            return 0;\r\n            }).forEach(element => {\r\n            if((element.type === \"channel\" && element.nameFrom === idChat) || (element.type === \"superchannel\" && element.nameFrom === idChat)){\r\n                if(element.text !== null){\r\n                    let data = [element.text, convertDate(element.date), element.chatId, element.messageId, element.username, element.answers, element.comments];\r\n                    Message.push(data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    if(openChat === true){\r\n        return(\r\n            <div >\r\n            {Message.filter((element, index) => {\r\n                return Message.indexOf(element) === index;\r\n            }).map(data => {\r\n                return (\r\n                    <div className = \"ChatElement\" onClick = {() => {\r\n                        dispatch(open());\r\n                        dispatch(setMessageChat(data[3]));\r\n                    }}>\r\n                        <p>Сообщения: { data[0] }</p>\r\n                        <p>Время: { data[1] }</p>\r\n                    </div>\r\n                ) \r\n            }\r\n            )}\r\n            </div>\r\n        );\r\n    } else{\r\n        return null    \r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}