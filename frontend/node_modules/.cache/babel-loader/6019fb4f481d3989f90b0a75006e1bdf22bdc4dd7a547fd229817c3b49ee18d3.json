{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\social space\\\\frontend\\\\src\\\\component\\\\Chat\\\\ChatOpen.jsx\",\n  _s = $RefreshSig$();\nimport convertDate from \"../../features/convertDate\";\nimport getCookie from \"../../features/getCookie\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { close } from '../../features/redux/openChatSlice';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatOpen(props) {\n  _s();\n  const openChat = useSelector(state => state.openChat.value);\n  const idChat = useSelector(state => state.idChat.value);\n  const dispatch = useDispatch();\n  const [text, setText] = useState();\n  let message = [];\n  let chat = document.querySelector(\"#ChatInfo\");\n  if (props.data != null) {\n    props.data.forEach(element => {\n      if (element.username === idChat && element.type === \"private\") {\n        let data = [element.text, convertDate(element.date), element.chatId, element.messageId, element.username, element.answers, element.textPhotos];\n        message.push(data);\n      }\n    });\n  }\n  const sendMessage = async () => {\n    if (text) {\n      let botId = await fetch('https://localhost:7013/api/user/GetInfo/' + getCookie(\"userId\")).then(Response => Response.json()).then(async Result => {\n        return Result.responseData[\"usingBots\"].toString().split('----')[0];\n      });\n      await fetch(\"https://localhost:7013/api/telegram/sendMessage/\" + botId + \"&\" + message[message.length - 1][2] + \"&\" + text + \"&\" + message[message.length - 1][3]);\n      let element = document.getElementById(\"message\");\n      element.value = \"\";\n      setText(null);\n      let chat = await document.querySelector(\"#ChatInfo\");\n      if (chat != null) {\n        chat.scrollTop = Math.pow(10, 10);\n      }\n    } else {\n      alert(\"Напишите сообщение\");\n    }\n  };\n  const textHandler = event => {\n    setText(event.target.value);\n    chat.scrollTop = Math.pow(10, 10);\n  };\n  if (chat != null) {\n    if (chat.scrollTop === 0) {\n      chat.scrollTop = Math.pow(10, 10);\n    }\n    ;\n  }\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n  if (openChat === false) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"OpenChat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: idChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ChatInfo\",\n        className: \"ChatInfo\",\n        children: message.reverse().map((data, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ChatInfoElement\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ChatInfoElementMessage\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: data[6],\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text\",\n                  children: data[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"time\",\n                  children: data[1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), data[5] ? data[5].reverse().sort(function (a, b) {\n              if (a.split('/')[1] > b.split('/')[1]) {\n                return 1;\n              }\n              if (a.split('/')[1] < b.split('/')[1]) {\n                return -1;\n              }\n              return 0;\n            }).map((answer, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ChatAnswerElement\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text\",\n                  children: answer.split(\"/\")[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"time\",\n                  children: answer.split(\"/\")[1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 41\n              }, this);\n            }) : null]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => textHandler(event),\n          onKeyDown: handleKeyPress,\n          name: \"message\",\n          id: \"message\",\n          type: text,\n          placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendMessage(),\n            children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch(close()),\n          children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u0447\\u0430\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(ChatOpen, \"Wwpdgv3ZzdC4HCqfkjsI/PYmTkg=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = ChatOpen;\nvar _c;\n$RefreshReg$(_c, \"ChatOpen\");","map":{"version":3,"names":["convertDate","getCookie","useSelector","useDispatch","close","useState","ChatOpen","props","openChat","state","value","idChat","dispatch","text","setText","message","chat","document","querySelector","data","forEach","element","username","type","date","chatId","messageId","answers","textPhotos","push","sendMessage","botId","fetch","then","Response","json","Result","responseData","toString","split","length","getElementById","scrollTop","Math","pow","alert","textHandler","event","target","handleKeyPress","e","key","reverse","map","index","sort","a","b","answer"],"sources":["D:/Проекты/social space/frontend/src/component/Chat/ChatOpen.jsx"],"sourcesContent":["import convertDate from \"../../features/convertDate\";\nimport getCookie from \"../../features/getCookie\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { close } from '../../features/redux/openChatSlice';\nimport { useState } from \"react\";\n\nexport default function ChatOpen(props) {\n    const openChat = useSelector((state) => state.openChat.value)\n    const idChat = useSelector((state) => state.idChat.value)\n    const dispatch = useDispatch()\n    const [text, setText] = useState();\n\n    let message = [];\n\n    let chat = document.querySelector(\"#ChatInfo\");\n\n    if(props.data != null){\n        props.data.forEach(element => {\n            if(element.username === idChat && element.type === \"private\"){\n                let data = [element.text, convertDate(element.date), element.chatId, element.messageId, element.username, element.answers, element.textPhotos];\n                message.push(data);\n            }\n        });\n    }\n    \n    const sendMessage = async () => {\n        if(text){\n            let botId = await fetch('https://localhost:7013/api/user/GetInfo/' + getCookie(\"userId\"))\n            .then((Response) => Response.json())\n            .then(async (Result) => { return Result.responseData[\"usingBots\"].toString().split('----')[0] });\n    \n            await fetch(\"https://localhost:7013/api/telegram/sendMessage/\" + botId + \"&\" + message[message.length-1][2] + \"&\" + text + \"&\" + message[message.length-1][3]);\n            \n            let element = document.getElementById(\"message\");\n            element.value = \"\";\n            setText(null);\n            \n            let chat = await document.querySelector(\"#ChatInfo\");\n            if(chat != null){\n                chat.scrollTop = Math.pow(10, 10);\n            }\n        } else{\n            alert(\"Напишите сообщение\")\n        }\n    }\n    \n    const textHandler = (event) => {\n        setText(event.target.value);\n        chat.scrollTop = Math.pow(10,10);\n    }\n    \n    if(chat != null){\n        if(chat.scrollTop === 0){\n            chat.scrollTop = Math.pow(10,10);\n        };\n    }\n\n    const handleKeyPress = (e) => {\n        if(e.key === \"Enter\"){\n            sendMessage();\n        }\n    } \n\n    if(openChat === false){\n        return null\n    } else{\n        return(\n            <div className=\"OpenChat\">   \n                <h1>{idChat}</h1>\n                <div id=\"ChatInfo\" className=\"ChatInfo\">\n                    {message.reverse().map((data, index) => { \n                        return (\n                            <div key = {index} >\n                                <div className = \"ChatInfoElement\"> \n                                    <div className=\"ChatInfoElementMessage\">\n                                        <img src={ data[6] } alt=\"\" />\n                                        <p className=\"text\">{ data[0] }</p>\n                                        <p className=\"time\">{ data[1] }</p>\n                                    </div>\n                                </div>\n                                { data[5] ? data[5].reverse().sort(function(a,b){\n                                    if(a.split('/')[1] > b.split('/')[1]){\n                                        return 1;\n                                    }\n                                    if(a.split('/')[1] < b.split('/')[1]){\n                                        return -1;\n                                    }\n                                    return 0;\n                                }).map((answer, index) => {\n                                    return(\n                                        <div className = \"ChatAnswerElement\" key={index}>\n                                            <p className = \"text\">{ answer.split(\"/\")[0] }</p>\n                                            <p className = \"time\">{ answer.split(\"/\")[1] }</p> \n                                        </div>\n                                    )\n                                }) : null}\n                            </div>\n                        )\n                    })}\n                </div>\n                <div className=\"answer\">\n                    <input onChange={(event) => textHandler(event)} onKeyDown={handleKeyPress} name=\"message\" id=\"message\" type={text} placeholder=\"Напишите сообщение...\"></input>\n                    <div className=\"buttons\">\n                        <button onClick={() => sendMessage()}>Ответить</button>\n                    </div>\n                    <button onClick={ () => dispatch(close()) }>Закрыть чат</button>\n                </div>\n            </div>\n        );\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}