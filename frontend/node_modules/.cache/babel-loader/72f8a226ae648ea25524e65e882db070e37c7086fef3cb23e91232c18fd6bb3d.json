{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\social-space\\\\frontend\\\\src\\\\component\\\\Channel\\\\ChannelList.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { open } from '../../features/redux/openChatSlice';\nimport { close } from '../../features/redux/openMessageSlice';\nimport { setIdChat } from '../../features/redux/idChatSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChannelList(props) {\n  _s();\n  const dispatch = useDispatch();\n  let group = [];\n  if (props.data != null) {\n    props.data.sort(function (a, b) {\n      if (a.date < b.date) {\n        return 1;\n      }\n      if (a.date > b.date) {\n        return -1;\n      }\n      return 0;\n    }).forEach(element => {\n      if (element.type === \"channel\" || element.type === \"superchannel\") {\n        group.push(element.nameFrom);\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: group.filter((element, index) => {\n      return group.indexOf(element) === index;\n    }).map(data => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ChatElement\",\n        onClick: () => {\n          dispatch(open());\n          dispatch(close());\n          dispatch(setIdChat(data));\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, group.indexOf(data), false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(ChannelList, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = ChannelList;\nvar _c;\n$RefreshReg$(_c, \"ChannelList\");","map":{"version":3,"names":["React","useDispatch","open","close","setIdChat","jsxDEV","_jsxDEV","ChannelList","props","_s","dispatch","group","data","sort","a","b","date","forEach","element","type","push","nameFrom","children","filter","index","indexOf","map","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Проекты/social-space/frontend/src/component/Channel/ChannelList.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { open } from '../../features/redux/openChatSlice';\r\nimport { close } from '../../features/redux/openMessageSlice';\r\nimport { setIdChat } from '../../features/redux/idChatSlice';\r\n\r\nexport default function ChannelList(props) {\r\n    const dispatch = useDispatch()\r\n  \r\n    let group = [];\r\n\r\n    if(props.data != null){\r\n        props.data.sort(function(a,b){\r\n            if(a.date < b.date){\r\n                return 1;\r\n            }\r\n            if(a.date > b.date){\r\n                return -1;\r\n            }\r\n            return 0;\r\n            }).forEach(element => {\r\n            if(element.type === \"channel\" || element.type === \"superchannel\"){\r\n                group.push(element.nameFrom);\r\n            }\r\n        });\r\n    }\r\n    return(\r\n        <div >\r\n        {group.filter((element, index) => {\r\n            return group.indexOf(element) === index;\r\n        }).map(data => {\r\n            return (\r\n                <div className=\"ChatElement\" key = {group.indexOf(data)} onClick = {() => {\r\n                    dispatch(open());\r\n                    dispatch(close());\r\n                    dispatch(setIdChat(data));\r\n                }}>\r\n                    <h1>{ data }</h1>\r\n                </div>\r\n            ) \r\n        }\r\n        )}\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,IAAI,QAAQ,oCAAoC;AACzD,SAASC,KAAK,QAAQ,uCAAuC;AAC7D,SAASC,SAAS,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,eAAe,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvC,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAE9B,IAAIU,KAAK,GAAG,EAAE;EAEd,IAAGH,KAAK,CAACI,IAAI,IAAI,IAAI,EAAC;IAClBJ,KAAK,CAACI,IAAI,CAACC,IAAI,CAAC,UAASC,CAAC,EAACC,CAAC,EAAC;MACzB,IAAGD,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAC;QACf,OAAO,CAAC;MACZ;MACA,IAAGF,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAC;QACf,OAAO,CAAC,CAAC;MACb;MACA,OAAO,CAAC;IACR,CAAC,CAAC,CAACC,OAAO,CAACC,OAAO,IAAI;MACtB,IAAGA,OAAO,CAACC,IAAI,KAAK,SAAS,IAAID,OAAO,CAACC,IAAI,KAAK,cAAc,EAAC;QAC7DR,KAAK,CAACS,IAAI,CAACF,OAAO,CAACG,QAAQ,CAAC;MAChC;IACJ,CAAC,CAAC;EACN;EACA,oBACIf,OAAA;IAAAgB,QAAA,EACCX,KAAK,CAACY,MAAM,CAAC,CAACL,OAAO,EAAEM,KAAK,KAAK;MAC9B,OAAOb,KAAK,CAACc,OAAO,CAACP,OAAO,CAAC,KAAKM,KAAK;IAC3C,CAAC,CAAC,CAACE,GAAG,CAACd,IAAI,IAAI;MACX,oBACIN,OAAA;QAAKqB,SAAS,EAAC,aAAa;QAA6BC,OAAO,EAAIA,CAAA,KAAM;UACtElB,QAAQ,CAACR,IAAI,EAAE,CAAC;UAChBQ,QAAQ,CAACP,KAAK,EAAE,CAAC;UACjBO,QAAQ,CAACN,SAAS,CAACQ,IAAI,CAAC,CAAC;QAC7B,CAAE;QAAAU,QAAA,eACEhB,OAAA;UAAAgB,QAAA,EAAMV;QAAI;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAO,GALerB,KAAK,CAACc,OAAO,CAACb,IAAI,CAAC;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAMjD;IAEd,CAAC;EACA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACK;AAEd;AAACvB,EAAA,CAtCuBF,WAAW;EAAA,QACdN,WAAW;AAAA;AAAAgC,EAAA,GADR1B,WAAW;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}