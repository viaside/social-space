{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\social space\\\\frontend\\\\src\\\\component\\\\Group\\\\GroupOpenMessage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { open } from '../../features/redux/openMessageSlice';\nimport { setMessageChat } from '../../features/redux/idMessageSlice';\nimport convertDate from '../../features/convertDate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GroupOpenMessage(props) {\n  _s();\n  const openChat = useSelector(state => state.openChat.value);\n  const idChat = useSelector(state => state.idChat.value);\n  const dispatch = useDispatch();\n  let Message = [];\n  if (props.data != null) {\n    props.data.sort(function (a, b) {\n      if (a.date < b.date) {\n        return 1;\n      }\n      if (a.date > b.date) {\n        return -1;\n      }\n      return 0;\n    }).forEach(element => {\n      if (element.type === \"group\" && element.nameFrom === idChat || element.type === \"supergroup\" && element.nameFrom === idChat) {\n        if (element.text !== null) {\n          let data = [element.text, convertDate(element.date), element.chatId, element.messageId, element.username, element.answers, element.comments, element.userPhoto, element.textPhotos];\n          Message.push(data);\n        } else {\n          let data = [\"*Изображение\", convertDate(element.date), element.chatId, element.messageId, element.username, element.answers, element.comments, element.userPhoto, element.textPhotos];\n          Message.push(data);\n        }\n      }\n    });\n  }\n  const activeMessage = async id => {\n    for (let i = 0; i <= Message.length; i++) {\n      let element = document.getElementById(i);\n      if (element) {\n        if (id === i) {\n          element.style.backgroundColor = \"#353535\";\n        } else {\n          element.style.backgroundColor = null;\n        }\n      }\n    }\n  };\n  if (openChat === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatListAll\",\n      children: Message.filter((element, index) => {\n        return Message.indexOf(element) === index;\n      }).map((data, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ChatList\",\n          id: index,\n          onClick: () => {\n            dispatch(open());\n            dispatch(setMessageChat(data[3]));\n            activeMessage(index);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: data[7],\n              alt: \"avatar\",\n              width: 70\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"userName\",\n              children: data[4]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"lastMessage\",\n              children: data[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n}\n_s(GroupOpenMessage, \"Lsz7ARPB4QsepvW16gY/PlSINp0=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = GroupOpenMessage;\nvar _c;\n$RefreshReg$(_c, \"GroupOpenMessage\");","map":{"version":3,"names":["React","useSelector","useDispatch","open","setMessageChat","convertDate","GroupOpenMessage","props","openChat","state","value","idChat","dispatch","Message","data","sort","a","b","date","forEach","element","type","nameFrom","text","chatId","messageId","username","answers","comments","userPhoto","textPhotos","push","activeMessage","id","i","length","document","getElementById","style","backgroundColor","filter","index","indexOf","map"],"sources":["D:/Проекты/social space/frontend/src/component/Group/GroupOpenMessage.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { open } from '../../features/redux/openMessageSlice';\nimport { setMessageChat } from '../../features/redux/idMessageSlice';\nimport convertDate from '../../features/convertDate';\n\nexport default function GroupOpenMessage(props) {\n    const openChat = useSelector((state) => state.openChat.value)\n    const idChat = useSelector((state) => state.idChat.value)\n    const dispatch = useDispatch()\n  \n    let Message = [];\n\n    if(props.data != null){\n        props.data.sort(function(a,b){\n            if(a.date < b.date){\n                return 1;\n            }\n            if(a.date > b.date){\n                return -1;\n            }\n            return 0;\n            }).forEach(element => {\n            if((element.type === \"group\" && element.nameFrom === idChat) || (element.type === \"supergroup\" && element.nameFrom === idChat)){\n                if(element.text !== null){\n                    let data = [element.text, convertDate(element.date), element.chatId, element.messageId, element.username, element.answers, element.comments, element.userPhoto, element.textPhotos];\n                    Message.push(data);\n                } else{\n                    let data = [\"*Изображение\", convertDate(element.date), element.chatId, element.messageId, element.username, element.answers, element.comments, element.userPhoto, element.textPhotos];\n                    Message.push(data);\n                }\n            }\n        });\n    }\n\n    const activeMessage = async (id) => {\n        for(let i = 0; i <= Message.length; i++){\n            let element = document.getElementById(i);\n            if(element){\n                if(id === i){\n                    element.style.backgroundColor = \"#353535\";\n                } else{\n                    element.style.backgroundColor = null;\n                }\n            }\n        }\n    }\n\n    if(openChat === true){\n        return(\n            <div className='ChatListAll'>\n            {Message.filter((element, index) => {\n                return Message.indexOf(element) === index;\n            }).map((data, index) => {\n                return (\n                    <div className=\"ChatList\" id={index} key = {index} onClick = {() => {\n                        dispatch(open());\n                        dispatch(setMessageChat(data[3]));\n                        activeMessage(index)\n                    }}>\n                        <div className='avatar'>\n                            <img src={ data[7] } alt=\"avatar\" width={70}/>\n                        </div>\n                        <div className='text'>\n                            <p className='userName'>{ data[4] }</p>\n                            <p className='lastMessage'>{ data[0] }</p>\n                        </div>\n                    </div>\n                ) \n            }\n            )}\n            </div>\n        );\n    } else{\n        return null    \n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}