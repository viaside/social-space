{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\social space\\\\frontend\\\\src\\\\component\\\\Chat\\\\ChatList.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { open } from '../../features/redux/openChatSlice';\nimport { setIdChat } from '../../features/redux/idChatSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatList(props) {\n  _s();\n  const dispatch = useDispatch();\n  const chats = [];\n  const lastMessage = [];\n  if (props.data != null) {\n    props.data.sort(function (a, b) {\n      if (a.date < b.date) {\n        return 1;\n      }\n      if (a.date > b.date) {\n        return -1;\n      }\n      return 0;\n    }).forEach(element => {\n      if (element.type === \"private\") {\n        chats.push(element.username + \"//-//\" + element.userPhoto);\n        lastMessage.push(element.text);\n      }\n    });\n  }\n  const activeChat = async id => {\n    for (let i = 0; i <= chats.length; i++) {\n      let element = document.getElementById(i);\n      if (element) {\n        if (id === i) {\n          element.style.backgroundColor = \"#353535\";\n        } else {\n          element.style.backgroundColor = null;\n        }\n      }\n    }\n  };\n  const nullAvatar = (index, username) => {\n    if (document.getElementById(\"avatar\" + index)) {\n      console.log(username);\n      img = document.getElementById(\"avatar\" + index).outerHTML = '<p className=\"chatAvatarNull\">' + username + '</p>';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ChatListAll\",\n    children: chats.filter((element, index) => {\n      return chats.indexOf(element) === index;\n    }).map((data, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ChatList\",\n        id: chats.indexOf(data),\n        onClick: () => {\n          dispatch(open());\n          dispatch(setIdChat(data.split('//-//')[0]));\n          activeChat(chats.indexOf(data));\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"avatar\" + index,\n            src: data.split('//-//')[1],\n            alt: \"avatar\",\n            width: 70,\n            onError: nullAvatar(index, data.split('//-//')[0][0].toUpperCase())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"userName\",\n            children: data.split('//-//')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lastMessage\",\n            children: lastMessage[chats.indexOf(data)]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatList, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","useDispatch","open","setIdChat","ChatList","props","dispatch","chats","lastMessage","data","sort","a","b","date","forEach","element","type","push","username","userPhoto","text","activeChat","id","i","length","document","getElementById","style","backgroundColor","nullAvatar","index","console","log","img","outerHTML","filter","indexOf","map","split","toUpperCase"],"sources":["D:/Проекты/social space/frontend/src/component/Chat/ChatList.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { open } from '../../features/redux/openChatSlice';\nimport { setIdChat } from '../../features/redux/idChatSlice';\n\nexport default function ChatList(props) {\n    const dispatch = useDispatch()\n  \n    const chats = [];\n    const lastMessage = [];\n\n    if(props.data != null){\n        props.data.sort(function(a,b){\n                if(a.date < b.date){ return 1 }\n                if(a.date > b.date){ return -1 }\n                return 0;\n            }).forEach(element => {\n                if(element.type === \"private\"){\n                    chats.push(element.username + \"//-//\" + element.userPhoto);\n                    lastMessage.push(element.text);\n                }\n        });\n    }\n    \n    const activeChat = async (id) => {\n        for(let i = 0; i <= chats.length; i++){\n            let element = document.getElementById(i);\n            if(element){\n                if(id === i){\n                    element.style.backgroundColor = \"#353535\";\n                } else{\n                    element.style.backgroundColor = null;\n                }\n            }\n        }\n    }\n\n    const nullAvatar = (index, username) => {\n        if(document.getElementById(\"avatar\" + index)){\n            console.log(username);\n            img  = document.getElementById(\"avatar\" + index).outerHTML = '<p className=\"chatAvatarNull\">'+ username +'</p>';\n\n        }\n    }\n\n    return(\n        <div className='ChatListAll'>\n            {\n            chats.filter((element, index) => {\n                return chats.indexOf(element) === index;\n            }).map((data, index) => {\n            \n                return (\n                    <div className=\"ChatList\" id = {chats.indexOf(data)} key = {index} onClick = {() => {\n                        dispatch(open());\n                        dispatch(setIdChat(data.split('//-//')[0]));\n                        activeChat(chats.indexOf(data));\n                    }}>\n                        <div className='avatar'>\n                            <img id={\"avatar\" + index} src={ data.split('//-//')[1] } alt=\"avatar\" width={70} onError={nullAvatar(index, data.split('//-//')[0][0].toUpperCase())}/>\n                        </div>\n                        <div className='text'>\n                            <p className='userName'>{ data.split('//-//')[0] }</p>\n                            <p className='lastMessage'>{ lastMessage[chats.indexOf(data)] }</p>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}