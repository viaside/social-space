{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\social space\\\\frontend\\\\src\\\\component\\\\Chat\\\\AllMessage.jsx\",\n  _s = $RefreshSig$();\nimport convertDate from \"../../features/convertDate\";\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllMessage(props) {\n  _s();\n  const openChat = useSelector(state => state.openChat.value);\n  const idChat = useSelector(state => state.idChat.value);\n  let message = [];\n  let userPhoto;\n  if (props.data != null) {\n    props.data.forEach(async element => {\n      if (element.username === idChat && element.type !== \"private\") {\n        let data = [element.text, convertDate(element.date), element.chatId, element.messageId, element.username, element.answers, element.nameFrom, element.userPhoto, element.textPhotos];\n        message.push(data);\n      } else {\n        let data = [undefined, convertDate(element.date), element.chatId, element.messageId, element.username, element.answers, element.nameFrom, element.userPhoto, element.textPhotos];\n        message.push(data);\n      }\n    });\n  }\n  message.forEach(element => {\n    if (element[4] === idChat) {\n      userPhoto = element[7];\n    }\n  });\n  let chat = document.querySelector(\"#ChatInfo2\");\n  if (chat != null) {\n    if (chat.scrollTop === 0) {\n      chat.scrollTop = Math.pow(10, 10);\n    }\n    ;\n  }\n  const nullAvatar = username => {\n    let img = document.getElementById(\"allchat\");\n    console.log(img);\n    img.outerHTML = \"<p className='chatAvatarNull'>\" + username[0].toUpperCase() + \"</p>\";\n  };\n  if (openChat === false) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AllMessageChat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"allchat\",\n          src: userPhoto,\n          alt: \"av\",\n          width: 120,\n          onError: () => {\n            nullAvatar(idChat);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: idChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0412\\u0441\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F \\u0432 \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430\\u0445:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ChatInfo\",\n        id: \"ChatInfo2\",\n        children: message.reverse().map((data, index) => {\n          if (data[0]) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ChatInfoElement\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ChatInfoElementMessage\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text\",\n                  children: data[6]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: data[8],\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text\",\n                  children: data[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"time\",\n                  children: data[1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(AllMessage, \"askTrxINSdMLuMzA+2I61Z8n93Y=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = AllMessage;\nvar _c;\n$RefreshReg$(_c, \"AllMessage\");","map":{"version":3,"names":["convertDate","useSelector","AllMessage","props","openChat","state","value","idChat","message","userPhoto","data","forEach","element","username","type","text","date","chatId","messageId","answers","nameFrom","textPhotos","push","undefined","chat","document","querySelector","scrollTop","Math","pow","nullAvatar","img","getElementById","console","log","outerHTML","toUpperCase","reverse","map","index"],"sources":["D:/Проекты/social space/frontend/src/component/Chat/AllMessage.jsx"],"sourcesContent":["import convertDate from \"../../features/convertDate\";\nimport { useSelector } from 'react-redux';\n\nexport default function AllMessage(props) {\n    const openChat = useSelector((state) => state.openChat.value)\n    const idChat = useSelector((state) => state.idChat.value)\n\n    let message = [];\n    let userPhoto;\n\n    if(props.data != null){\n        props.data.forEach(async element => {\n            if(element.username === idChat && element.type !== \"private\"){\n                let data = [element.text, convertDate(element.date), element.chatId, element.messageId, element.username, element.answers, element.nameFrom, element.userPhoto, element.textPhotos];\n                message.push(data);\n            } else{\n                let data = [undefined, convertDate(element.date), element.chatId, element.messageId, element.username, element.answers, element.nameFrom, element.userPhoto, element.textPhotos];\n                message.push(data);\n            }\n            });\n    }\n\n    message.forEach(element => {\n        if(element[4] === idChat){\n            userPhoto = element[7];\n        }\n    });\n\n    let chat = document.querySelector(\"#ChatInfo2\");\n    if(chat != null){\n        if(chat.scrollTop === 0){\n            chat.scrollTop = Math.pow(10,10);\n        };\n    }\n\n    const nullAvatar = (username) => {\n        let img = document.getElementById(\"allchat\");\n        console.log(img);\n        img.outerHTML = \"<p className='chatAvatarNull'>\" + username[0].toUpperCase() + \"</p>\";\n    }\n\n    if(openChat === false){\n        return null\n    } else{\n        return(\n            <div className = \"AllMessageChat\">  \n                <div className=\"avatar\">\n                    <img id=\"allchat\" src={userPhoto} alt=\"av\" width={120} onError={()=>{nullAvatar(idChat)}}/>\n                </div> \n                <h1>{ idChat }</h1>\n                <p>Все сообщения в группах:</p>\n                <div className = \"ChatInfo\" id=\"ChatInfo2\" >\n                    {message.reverse().map((data, index) => {\n                        if(data[0]){\n                            return (\n                                <div className = \"ChatInfoElement\" key={index}> \n                                    <div className = \"ChatInfoElementMessage\">\n                                        <p className = \"text\">{ data[6] }</p>\n                                        <img src={ data[8] } alt=\"\"/>\n                                        <p className = \"text\">{ data[0] }</p>\n                                        <p className = \"time\">{ data[1] }</p>\n                                    </div>\n                                </div>\n                        )\n                        } else{\n                            return null\n                        }   \n                    })}\n                </div>\n            </div>\n        );\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}