{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\social-space\\\\frontend\\\\src\\\\component\\\\Chat\\\\AllMessage.jsx\",\n  _s = $RefreshSig$();\nimport convertDate from \"../../features/convertDate\";\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllMessage(props) {\n  _s();\n  // redux state\n  const openChat = useSelector(state => state.openChat.value);\n  const idChat = useSelector(state => state.idChat.value);\n\n  // mesage array and user photo \n  let message = [];\n  let userPhoto;\n\n  // load data\n  if (props.data != null) {\n    props.data.forEach(async element => {\n      if (element.username === idChat && element.type !== \"private\") {\n        let data = [element.text, convertDate(element.date), element.chatId, element.messageId, element.username, element.answers, element.nameFrom, element.userAvatar, element.textPhoto];\n        message.push(data);\n      } else {\n        let data = [undefined, convertDate(element.date), element.chatId, element.messageId, element.username, element.answers, element.nameFrom, element.userAvatar, element.textPhoto];\n        message.push(data);\n      }\n    });\n  }\n\n  // set correct user avatar\n  message.forEach(element => {\n    if (element[4] === idChat) {\n      userPhoto = element[7];\n    }\n  });\n\n  // error load user avatar\n  const nullAvatar = username => {\n    let img = document.getElementById(\"allchat\");\n    img.outerHTML = \"<p className='chatAvatarNull'>\" + username[0].toUpperCase() + \"</p>\";\n  };\n\n  // scrolling message list to end\n  let chat = document.querySelector(\"#ChatInfo2\");\n  if (chat != null) {\n    if (chat.scrollTop === 0) {\n      chat.scrollTop = chat.scrollHeight;\n      ;\n    }\n    ;\n  }\n  if (openChat === false) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AllMessageChat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AlLMessageUser\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"allchat\",\n            src: \"data:image/jpeg;base64,\" + userPhoto,\n            alt: \"av\",\n            width: 120,\n            onError: () => {\n              nullAvatar(idChat);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"userName\",\n          children: idChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0412\\u0441\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F \\u0432 \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430\\u0445:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ChatInfo\",\n        id: \"ChatInfo2\",\n        children: message.reverse().map((data, index) => {\n          if (data[0]) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ChatInfoElement\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ChatInfoElementMessage\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"group\",\n                  children: [\"\\u0412 \", data[6]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"data:image/jpeg;base64,\" + data[8],\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text\",\n                  children: data[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"time\",\n                  children: data[1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(AllMessage, \"askTrxINSdMLuMzA+2I61Z8n93Y=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = AllMessage;\nvar _c;\n$RefreshReg$(_c, \"AllMessage\");","map":{"version":3,"names":["convertDate","useSelector","jsxDEV","_jsxDEV","AllMessage","props","_s","openChat","state","value","idChat","message","userPhoto","data","forEach","element","username","type","text","date","chatId","messageId","answers","nameFrom","userAvatar","textPhoto","push","undefined","nullAvatar","img","document","getElementById","outerHTML","toUpperCase","chat","querySelector","scrollTop","scrollHeight","className","children","id","src","alt","width","onError","fileName","_jsxFileName","lineNumber","columnNumber","reverse","map","index","_c","$RefreshReg$"],"sources":["D:/Проекты/social-space/frontend/src/component/Chat/AllMessage.jsx"],"sourcesContent":["import convertDate from \"../../features/convertDate\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function AllMessage(props) {\r\n    // redux state\r\n    const openChat = useSelector((state) => state.openChat.value)\r\n    const idChat = useSelector((state) => state.idChat.value)\r\n\r\n    // mesage array and user photo \r\n    let message = [];\r\n    let userPhoto;\r\n\r\n\r\n    // load data\r\n    if(props.data != null){\r\n        props.data.forEach(async element => {\r\n            if(element.username === idChat && element.type !== \"private\"){\r\n                let data = [element.text, convertDate(element.date), element.chatId, element.messageId, element.username, element.answers, element.nameFrom, element.userAvatar, element.textPhoto];\r\n                message.push(data);\r\n            } else{\r\n                let data = [undefined, convertDate(element.date), element.chatId, element.messageId, element.username, element.answers, element.nameFrom, element.userAvatar, element.textPhoto];\r\n                message.push(data);\r\n            }\r\n            });\r\n    }\r\n\r\n    // set correct user avatar\r\n    message.forEach(element => {\r\n        if(element[4] === idChat){\r\n            userPhoto = element[7];\r\n        }\r\n    });\r\n\r\n    \r\n    // error load user avatar\r\n    const nullAvatar = (username) => {\r\n        let img = document.getElementById(\"allchat\");\r\n        img.outerHTML = \"<p className='chatAvatarNull'>\" + username[0].toUpperCase() + \"</p>\";\r\n    }\r\n    \r\n    // scrolling message list to end\r\n    let chat = document.querySelector(\"#ChatInfo2\");\r\n    if(chat != null){\r\n        if(chat.scrollTop === 0){\r\n            chat.scrollTop = chat.scrollHeight;;\r\n        };\r\n    }\r\n\r\n    if(openChat === false){\r\n        return null\r\n    } else{\r\n        return(\r\n            <div className = \"AllMessageChat\"> \r\n                <div className=\"AlLMessageUser\">\r\n                    <div className=\"avatar\">\r\n                        <img id=\"allchat\" src={ \"data:image/jpeg;base64,\" + userPhoto } alt=\"av\" width={120} onError={()=>{nullAvatar(idChat)}}/>\r\n                    </div> \r\n                    <p className=\"userName\">{ idChat }</p>\r\n                    <p>Все сообщения в группах:</p>\r\n                </div> \r\n                <div className = \"ChatInfo\" id=\"ChatInfo2\" >\r\n                    {message.reverse().map((data, index) => {\r\n                        if(data[0]){\r\n                            return (\r\n                                <div className = \"ChatInfoElement\" key={index}> \r\n                                    <div className = \"ChatInfoElementMessage\">\r\n                                        <p className = \"group\">В { data[6] }</p>\r\n                                        <img src={ \"data:image/jpeg;base64,\" + data[8] } alt=\"\"/>\r\n                                        <p className = \"text\">{ data[0] }</p>\r\n                                        <p className = \"time\">{ data[1] }</p>\r\n                                    </div>\r\n                                </div>\r\n                        )\r\n                        } else{\r\n                            return null\r\n                        }   \r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}