{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\social-space\\\\frontend\\\\src\\\\component\\\\Chat\\\\ChatList.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { open } from '../../features/redux/openChatSlice';\nimport { setIdChat } from '../../features/redux/idChatSlice';\nimport packagejson from \"../../../package.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatList(props) {\n  _s();\n  // redux\n  const dispatch = useDispatch();\n\n  // chats array and user last message\n  const chats = [];\n  const lastMessage = [];\n\n  // set chats array\n  if (props.data != null) {\n    props.data.sort(function (a, b) {\n      // sort by data\n      if (a.date < b.date) {\n        return 1;\n      }\n      if (a.date > b.date) {\n        return -1;\n      }\n      return 0;\n    }).forEach(element => {\n      console.log(element);\n      if (element.type === \"private\") {\n        chats.push(element.username + \"----\" + element.userAvatar);\n        lastMessage.push(element.text);\n      }\n    });\n  }\n  const activeChat = async id => {\n    // marks that messages have been viewed      \n    // fetch(packagejson.ipurl + '/api/telegram/CheckMessage/' + id)\n    // .then((Response) => Response.json())\n    // .then((Result) => {\n    //     console.log(Result);\n    // });\n\n    for (let i = 0; i <= chats.length; i++) {\n      // chat html element\n      let element = document.getElementById(i);\n      if (element) {\n        if (id === i) {\n          // set style active group\n          element.style.backgroundColor = \"#353535\";\n        } else {\n          // claer other group\n          element.style.backgroundColor = null;\n        }\n      }\n    }\n  };\n\n  // null avatar handler \n  const nullAvatar = (id, username) => {\n    //gag avatar\n    let img = document.getElementById(id + \"img\");\n    img.outerHTML = \"<p id=\" + id + \" className='chatAvatarNull'>\" + username[0].toUpperCase() + \"</p>\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ChatListAll\",\n    children: chats.sort().filter((element, index, arr) => {\n      return !index || element.split('----')[0] !== arr[index - 1].split('----')[0];\n    }).map((data, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ChatList\",\n        id: index,\n        onClick: () => {\n          dispatch(open());\n          dispatch(setIdChat(data.split('----')[0]));\n          activeChat(chats.indexOf(data));\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: index + \"img\",\n            src: \"data:image/jpeg;base64,\" + data.split('----')[1],\n            alt: \"avatar\",\n            width: 80,\n            onError: () => {\n              nullAvatar(index, data.split('----')[0]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"userName\",\n            children: data.split('----')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lastMessage\",\n            children: lastMessage[chats.indexOf(data)] ? lastMessage[chats.indexOf(data)] : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"gray\",\n              children: \"*\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 123\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatList, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","useDispatch","open","setIdChat","packagejson","jsxDEV","_jsxDEV","ChatList","props","_s","dispatch","chats","lastMessage","data","sort","a","b","date","forEach","element","console","log","type","push","username","userAvatar","text","activeChat","id","i","length","document","getElementById","style","backgroundColor","nullAvatar","img","outerHTML","toUpperCase","className","children","filter","index","arr","split","map","onClick","indexOf","src","alt","width","onError","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Проекты/social-space/frontend/src/component/Chat/ChatList.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { open } from '../../features/redux/openChatSlice';\r\nimport { setIdChat } from '../../features/redux/idChatSlice';\r\nimport packagejson from \"../../../package.json\";\r\n\r\nexport default function ChatList(props) {\r\n    // redux\r\n    const dispatch = useDispatch()\r\n  \r\n    // chats array and user last message\r\n    const chats = [];\r\n    const lastMessage = [];\r\n\r\n    // set chats array\r\n    if(props.data != null){\r\n        props.data.sort(function(a,b){\r\n            // sort by data\r\n            if(a.date < b.date){ return 1 }\r\n            if(a.date > b.date){ return -1 }\r\n            return 0;\r\n            }).forEach(element => {\r\n                console.log(element);\r\n                if(element.type === \"private\"){\r\n                    chats.push(element.username + \"----\" + element.userAvatar);\r\n                    lastMessage.push(element.text);\r\n                }\r\n        });\r\n    }\r\n    \r\n\r\n    const activeChat = async (id) => {\r\n        // marks that messages have been viewed      \r\n        // fetch(packagejson.ipurl + '/api/telegram/CheckMessage/' + id)\r\n        // .then((Response) => Response.json())\r\n        // .then((Result) => {\r\n        //     console.log(Result);\r\n        // });\r\n\r\n\r\n        for(let i = 0; i <= chats.length; i++){\r\n            // chat html element\r\n            let element = document.getElementById(i);\r\n\r\n            if(element){\r\n                if(id === i){\r\n                    // set style active group\r\n                    element.style.backgroundColor = \"#353535\";\r\n                } else{\r\n                    // claer other group\r\n                    element.style.backgroundColor = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // null avatar handler \r\n    const nullAvatar = (id, username) => {\r\n\r\n        //gag avatar\r\n        let img = document.getElementById(id + \"img\");\r\n        img.outerHTML = \"<p id=\" + id +\" className='chatAvatarNull'>\" + username[0].toUpperCase() + \"</p>\";\r\n    }\r\n\r\n    return(\r\n        <div className='ChatListAll'>   \r\n            {chats.sort().filter((element, index, arr) => {\r\n                return !index || element.split('----')[0] !== arr[index-1].split('----')[0];\r\n            }).map((data, index) => {\r\n                return (\r\n                    <div className=\"ChatList\" id = {index} key = {index} onClick = {() => {\r\n                        dispatch(open());\r\n                        dispatch(setIdChat(data.split('----')[0]));\r\n                        activeChat(chats.indexOf(data));\r\n                    }}>\r\n                        <div className='avatar'>\r\n                            <img id={index+\"img\"} src={ \"data:image/jpeg;base64,\" + data.split('----')[1] }\r\n                             alt=\"avatar\" width={80} onError={()=>{nullAvatar(index, data.split('----')[0])}}/>\r\n                        </div>\r\n                        <div className='text'>\r\n                            <p className='userName'>{ data.split('----')[0] }</p>\r\n                        <p className='lastMessage'>{ lastMessage[chats.indexOf(data)]? lastMessage[chats.indexOf(data)] : <p className='gray'>*Изображение</p> }</p>\r\n                        </div>\r\n                    </div>\r\n                ) \r\n            })}\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}